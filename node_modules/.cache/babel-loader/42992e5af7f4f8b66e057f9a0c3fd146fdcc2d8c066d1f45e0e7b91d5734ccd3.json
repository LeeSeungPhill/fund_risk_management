{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3449c498\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"close-image\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_subheader = _resolveComponent(\"v-subheader\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_ag_grid_vue = _resolveComponent(\"ag-grid-vue\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      \"no-gutter\": \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        align: \"left\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_subheader, null, {\n          default: _withCtx(() => [_createTextVNode(\" [관심 종목] \")]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_v_col, {\n        align: \"right\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_btn, {\n          onClick: _cache[0] || (_cache[0] = $event => _ctx.runDelete()),\n          style: {\n            \"background\": \"#4c6351\"\n          }\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"[삭제]\")]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_ag_grid_vue, {\n      style: {\n        \"width\": \"100%\",\n        \"height\": \"300px\"\n      },\n      class: \"ag-theme-balham\",\n      columnDefs: _ctx.colDefs,\n      rowData: _ctx.rowData,\n      paginationAutoPageSize: true,\n      pagination: true,\n      defaultColDef: _ctx.defaultColDef,\n      onCellClicked: _ctx.onCellClicked\n    }, null, 8, [\"columnDefs\", \"rowData\", \"defaultColDef\", \"onCellClicked\"])]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAa;;;;;;;;uBAAxBC,oBAuBM,OAvBNC,UAuBM,GAtBFC,aAqBcC;IArBDC,KAAK,EAAL;EAAK;sBACd,MASQ,CATRF,aASQG;MATD,WAAS,EAAT;IAAS;wBACZ,MAIQ,CAJRH,aAIQI;QAJDC,KAAK,EAAC;MAAM;0BACf,MAEc,CAFdL,aAEcM;4BAFD,MAEb,kBAFa,WAEb;;;;UAEJN,aAEQI;QAFDC,KAAK,EAAC;MAAO;0BAChB,MAAoE,CAApEL,aAAoEO;UAA5DC,OAAK,sCAAEC,cAAS;UAAIC,KAA2B,EAA3B;YAAA;UAAA;;4BAA4B,MAAI,kBAAJ,MAAI;;;;;;QAGpEV,aASEW;MARED,KAAmC,EAAnC;QAAA;QAAA;MAAA,CAAmC;MACnCb,KAAK,EAAC,iBAAiB;MACtBe,UAAU,EAAEH,YAAO;MACnBI,OAAO,EAAEJ,YAAO;MAChBK,sBAAsB,EAAE,IAAI;MAC5BC,UAAU,EAAE,IAAI;MAChBC,aAAa,EAAEP,kBAAa;MAC5BQ,aAAW,EAAER","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_container","fluid","_component_v_row","_component_v_col","align","_component_v_subheader","_component_v_btn","onClick","_ctx","style","_component_ag_grid_vue","columnDefs","rowData","paginationAutoPageSize","pagination","defaultColDef","onCellClicked"],"sourceRoot":"","sources":["/home/terra/Github/fund_risk_management/src/components/InterestItem.vue"],"sourcesContent":["<template>\n    <div class=\"close-image\">\n        <v-container fluid>\n            <v-row no-gutter>\n                <v-col align=\"left\">\n                    <v-subheader>\n                        [관심 종목]    \n                    </v-subheader>\n                </v-col>\n                <v-col align=\"right\">\n                    <v-btn @click=\"runDelete()\" style=\"background: #4c6351\">[삭제]</v-btn>\n                </v-col>\n            </v-row>    \n            <ag-grid-vue \n                style=\"width: 100%; height: 300px;\" \n                class=\"ag-theme-balham\" \n                :columnDefs=\"colDefs\" \n                :rowData=\"rowData\" \n                :paginationAutoPageSize=\"true\"\n                :pagination=\"true\"\n                :defaultColDef=\"defaultColDef\"\n                @cellClicked=\"onCellClicked\"\n            />\n        </v-container>\n    </div>\n</template>\n<script>\n    import { ref, defineComponent } from 'vue';\n    import axios from \"axios\";\n    import {AgGridVue} from 'ag-grid-vue3';\n    import 'ag-grid-community/styles/ag-grid.css';\n    import 'ag-grid-community/styles/ag-theme-balham.css';\n    import 'ag-grid-community/styles/ag-theme-quartz.css';\n\n    export default defineComponent({\n        name: 'App',\n        components:{\n            AgGridVue\n        },\n        setup(){\n\n        const defaultColDef = ref({\n            flex: 1,\n            minWidth: 100,\n            //editable: true,\n        });\n\n        const colDefs = ref([\n            {headerName: 'No', colId: 0, valueGetter: (params) => { return params.node.rowIndex + 1 } },\n            {headerName: '선택', field: 'chk', editable: true, cellRenderer:'agCheckboxCellRenderer', cellEditor: 'agCheckboxCellEditor'},\n            {headerName: '종목코드', field: 'code'},\n            {headerName: '종목명', field: 'name'},\n            {headerName: '시가총액', field: 'total_market_value', valueFormatter: (params) => {return params.value.toLocaleString() + '억원';},},\n            {headerName: '현재가', field: 'stck_prpr', valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '거래량비율', field: 'prdy_vol_rate', valueFormatter: (params) => {return  params.value.toLocaleString() + '%';},},\n            {headerName: '돌파가격', field: 'through_price', cellStyle: params=> {\n                if(params.data.K_through_price === '1' ) {\n                    return {color:'red', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.through_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.newValue,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.data.resist_price,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '이탈가격', field: 'leave_price', cellStyle: params=> {\n                if(params.data.D_leave_price === '1' ) {\n                    return {color:'blue', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.leave_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.newValue,\n                    resist_price: params.data.resist_price,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '저항가격', field: 'resist_price', cellStyle: params=> {\n                if(params.data.K_resist_price === '1' ) {\n                    return {color:'red', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.resist_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.newValue,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '지지가격', field: 'support_price', cellStyle: params=> {\n                if(params.data.D_support_price === '1' ) {\n                    return {color:'blue', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.support_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.data.resist_price,\n                    support_price: params.newValue,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '추세상단가격', field: 'trend_high_price', cellStyle: params=> {\n                if(params.data.K_trend_high_price === '1' ) {\n                    return {color:'red', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.trend_high_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.data.resist_price,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.newValue,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '추세하단가격', field: 'trend_low_price', cellStyle: params=> {\n                if(params.data.D_trend_low_price === '1' ) {\n                    return {color:'blue', 'font-weight': 'bold'}\n                }\n            }, valueSetter: params => {\n                \n                params.data.trend_low_price = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.data.resist_price,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.newValue,\n                    buy_expect_sum: params.data.buy_expect_sum\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n            {headerName: '매수예상금액', field: 'buy_expect_sum', valueSetter: params => {\n                \n                params.data.buy_expect_sum = params.newValue;\n\n                axios({\n                method: \"GET\",\n                url: \"http://phills2.gonetis.com:8000/interestItem/update/\",\n                params:{\n                    id: params.data.id,\n                    through_price: params.data.through_price,\n                    leave_price: params.data.leave_price,\n                    resist_price: params.data.resist_price,\n                    support_price: params.data.support_price,\n                    trend_high_price: params.data.trend_high_price,\n                    trend_low_price: params.data.trend_low_price,\n                    buy_expect_sum: params.newValue\n                }\n                \n                }).then(response => {\n                    console.log(\"Success\", response)\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to updateItem1\", error.response);\n                });\n                return true;\n            }, editable: true, cellEditor: 'agTextCellEditor', cellEditorParams: { min: 0, max: 9999999 }, valueFormatter: (params) => {return '￦' + params.value.toLocaleString();},},\n        ]);\n\n        return {\n            defaultColDef,\n            colDefs\n        }\n        },\n        data() {\n            return {\n                rowData: [],\n                charturl: null,\n                data: {\n                    through_price: \"\",\n                    leave_price: \"\",\n                    resist_price: \"\",\n                    support_price: \"\",\n                    trend_high_price: \"\",\n                    trend_low_price: \"\",\n                    buy_expect_sum: \"\"\n                },\n            };\n        },\n        methods : {\n            onCellClicked: (e) =>{\n                let charturl = null;\n                \n                if(e.column.colId === 'code'){\n                    if(e.data.code === '0001' || e.data.code === '1001'){\n                        axios({\n                            method: \"GET\",\n                            url: \"http://phills2.gonetis.com:8000/stockBalance/marketInfo/\",\n                            params:{\n                                market: e.data.code.trim() === '0001' ? '1001' : '2001'\n                            }\n                                \n                        }).then(response => {\n                            console.log(\"Success\", response)\n                            charturl = \"http://phills2.gonetis.com:8000/stockBalance/\"+response.data[0].market+\"/\"\n                            window.open(charturl, \"\", \"_blank\"); \n                            charturl = null\n                        }).catch(error => {\n                            alert(\"처리 에러\")\n                            console.log(\"Failed to kospiInfo\", error.response);\n                        }); \n                        if(charturl != null) \n                            window.open(charturl, \"\", \"_blank\");\n                    }else{\n                        axios({\n                            method: \"GET\",\n                            url: \"http://phills2.gonetis.com:8000/stockOrder/chart/\",\n                            params:{\n                                code: e.data.code.trim(),\n                                company: e.data.name.trim(),\n                            }\n                                                \n                        }).then(response => {\n                            console.log(\"Success\", response)\n                            charturl = \"http://phills2.gonetis.com:8000/stockOrder/\"+response.data[0].name+\"/\"\n                            window.open(charturl, \"\", \"_blank\"); \n                            charturl = null\n                        }).catch(error => {\n                            alert(\"처리 에러\")\n                            console.log(\"Failed to doInfo\", error.response);\n                        }); \n                        if(charturl != null) \n                            window.open(charturl, \"\", \"_blank\"); \n                    }    \n                }\n                if(e.column.colId === 'name'){  \n                    if(e.data.code === '0001' || e.data.code === '1001'){\n                        axios({\n                        method: \"GET\",\n                        url: \"http://phills2.gonetis.com:8000/stockBalance/marketMinutesInfo/\",\n                        params:{\n                            market: e.data.code.trim(),\n                            app_key: e.data.app_key,\n                            app_secret: e.data.app_secret,\n                            access_token: e.data.access_token\n                        }\n                                    \n                        }).then(response => {\n                            console.log(\"Success\", response)\n                            charturl = \"http://phills2.gonetis.com:8000/stockBalance/minutes_\"+response.data[0].market+\"/\"\n                            window.open(charturl, \"\", \"_blank\"); \n                            charturl = null\n                        }).catch(error => {\n                            alert(\"처리 에러\")\n                            console.log(\"Failed to kospiMinutesInfo\", error.response);\n                        }); \n                        if(charturl != null) \n                            window.open(charturl, \"\", \"_blank\");\n\n                    }else{\n                        axios({\n                            method: \"GET\",\n                            url: \"http://phills2.gonetis.com:8000/stockOrder/minutesInfo/\",\n                            params:{\n                                code: e.data.code.trim(),\n                                company: e.data.name.trim(),\n                                app_key: e.data.app_key,\n                                app_secret: e.data.app_secret,\n                                access_token: e.data.access_token\n                            }\n                                    \n                        }).then(response => {\n                            console.log(\"Success\", response)\n                            charturl = \"http://phills2.gonetis.com:8000/stockOrder/minutes_\"+response.data[0].name+\"/\"\n                            window.open(charturl, \"\", \"_blank\"); \n                            charturl = null\n                        }).catch(error => {\n                            alert(\"처리 에러\")\n                            console.log(\"Failed to minutesInfo\", error.response);\n                        }); \n                        if(charturl != null) \n                            window.open(charturl, \"\", \"_blank\"); \n                    }\n                }\n            },\n            fetchData: function(){\n                axios({\n                    method: \"GET\",\n                    url: \"http://phills2.gonetis.com:8000/interestItem/list/\",\n                    params:{\n                        acct_no: this.$route.params.acct_no,\n                        app_key: this.$route.params.app_key,\n                        app_secret: this.$route.params.app_secret,\n                        access_token: this.$route.params.access_token\n                    }\n                \n                }).then(response => {\n                    console.log(\"Success\", response.data)\n                    this.rowData = response.data;\n                    this.rowData.forEach(data => {data.acct_no = this.$route.params.acct_no})\n                    this.rowData.forEach(data => {data.app_key = this.$route.params.app_key})\n                    this.rowData.forEach(data => {data.app_secret = this.$route.params.app_secret})\n                    this.rowData.forEach(data => {data.access_token = this.$route.params.access_token})\n                }).catch(error => {\n                    alert(\"처리 에러\")\n                    console.log(\"Failed to fetchData\", error.response);\n                });\n            },    \n            runDelete: function(){\n                this.rowData.forEach(data =>{\n                    if(data.chk){\n                        axios({\n                            method: \"DELETE\",\n                            url: \"http://phills2.gonetis.com:8000/kis/interestItem/\" + data.id + \"/\", // http://phills2.gonetis.com:8000/kis/interestItem/1 로 delete 이벤트 전송\n                        }).then((response) => {\n                            console.log(\"Success\", response);\n                            this.fetchData()\n                        }).catch((error) => {\n                        console.log(\"Failed to deleteItem\", error.response);\n                        });\n                    } \n                })\n\n            },\n        },\n        created() { \n            this.fetchData();\n        }\n    });\n</script>\n<style scoped>\n.up1 {\n    font-weight: bold;\n    color: red;\n}\n.up2 {\n    font-weight: bold;\n    color: darkred;\n}\n.up3 {\n    font-weight: bold;\n    color: mediumvioletred\n}\n.down1 {\n  font-weight: bold;\n  color: blue;\n}\n.down2 {\n  font-weight: bold;\n  color: darkblue;\n}\n.down3 {\n  font-weight: bold;\n  color: mediumturquoise;\n}\n</style>    \n  \n    \n    \n    "]},"metadata":{},"sourceType":"module","externalDependencies":[]}