{"ast":null,"code":"import { ComponentUtil } from 'ag-grid-community';\nexport const kebabProperty = property => {\n  return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport const kebabNameToAttrEventName = kebabName => {\n  // grid-ready for example would become onGrid-ready in Vue\n  return `on${kebabName.charAt(0).toUpperCase()}${kebabName.substring(1, kebabName.length)}`;\n};\nexport const getAgGridProperties = () => {\n  const props = {};\n  // for example, 'grid-ready' would become 'onGrid-ready': undefined\n  // without this emitting events results in a warning\n  // and adding 'grid-ready' (and variations of this to the emits option in AgGridVue doesn't help either)\n  const eventNameAsProps = ComponentUtil.PUBLIC_EVENTS.map(eventName => kebabNameToAttrEventName(kebabProperty(eventName)));\n  eventNameAsProps.forEach(eventName => props[eventName] = undefined);\n  const computed = {\n    props() {\n      const options = {};\n      ComponentUtil.ALL_PROPERTIES.forEach(propertyName => {\n        var _a;\n        if (this[propertyName] === ComponentUtil.VUE_OMITTED_PROPERTY) {\n          return;\n        }\n        if (propertyName in this || propertyName in this.gridOptions) {\n          options[propertyName] = (_a = this[propertyName]) !== null && _a !== void 0 ? _a : this.gridOptions[propertyName];\n        }\n      });\n      return options;\n    }\n  };\n  const watch = {\n    modelValue: {\n      handler(currentValue, previousValue) {\n        if (!this.gridCreated || !this.api) {\n          return;\n        }\n        /*\n         * Prevents an infinite loop when using v-model for the rowData\n         */\n        if (currentValue === previousValue) {\n          return;\n        }\n        if (currentValue && previousValue) {\n          if (currentValue.length === previousValue.length) {\n            if (currentValue.every((item, index) => item === previousValue[index])) {\n              return;\n            }\n          }\n        }\n        ComponentUtil.processOnChange({\n          rowData: currentValue\n        }, this.api);\n      },\n      deep: true\n    },\n    props: {\n      handler(currentValue, previousValue) {\n        if (!this.gridCreated || !this.api) {\n          return;\n        }\n        const changes = {};\n        Object.entries(currentValue).forEach(([key, value]) => {\n          if (previousValue[key] === value) return;\n          changes[key] = value;\n        });\n        ComponentUtil.processOnChange(changes, this.api);\n      },\n      deep: true\n    }\n  };\n  ComponentUtil.ALL_PROPERTIES.filter(propertyName => propertyName != 'gridOptions') // dealt with in AgGridVue itself\n  .forEach(propertyName => {\n    props[propertyName] = {\n      default: ComponentUtil.VUE_OMITTED_PROPERTY\n    };\n  });\n  return [props, computed, watch];\n};","map":{"version":3,"names":["ComponentUtil","kebabProperty","property","replace","toLowerCase","kebabNameToAttrEventName","kebabName","charAt","toUpperCase","substring","length","getAgGridProperties","props","eventNameAsProps","PUBLIC_EVENTS","map","eventName","forEach","undefined","computed","options","ALL_PROPERTIES","propertyName","_a","VUE_OMITTED_PROPERTY","gridOptions","watch","modelValue","handler","currentValue","previousValue","gridCreated","api","every","item","index","processOnChange","rowData","deep","changes","Object","entries","key","value","filter","default"],"sources":["/home/terra/Github/fund_risk_management/node_modules/ag-grid-vue3/lib/Utils.js"],"sourcesContent":["import { ComponentUtil } from 'ag-grid-community';\nexport const kebabProperty = (property) => {\n    return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport const kebabNameToAttrEventName = (kebabName) => {\n    // grid-ready for example would become onGrid-ready in Vue\n    return `on${kebabName.charAt(0).toUpperCase()}${kebabName.substring(1, kebabName.length)}`;\n};\nexport const getAgGridProperties = () => {\n    const props = {};\n    // for example, 'grid-ready' would become 'onGrid-ready': undefined\n    // without this emitting events results in a warning\n    // and adding 'grid-ready' (and variations of this to the emits option in AgGridVue doesn't help either)\n    const eventNameAsProps = ComponentUtil.PUBLIC_EVENTS.map((eventName) => kebabNameToAttrEventName(kebabProperty(eventName)));\n    eventNameAsProps.forEach((eventName) => props[eventName] = undefined);\n    const computed = {\n        props() {\n            const options = {};\n            ComponentUtil.ALL_PROPERTIES.forEach((propertyName) => {\n                var _a;\n                if (this[propertyName] === ComponentUtil.VUE_OMITTED_PROPERTY) {\n                    return;\n                }\n                if (propertyName in this || propertyName in this.gridOptions) {\n                    options[propertyName] = (_a = this[propertyName]) !== null && _a !== void 0 ? _a : this.gridOptions[propertyName];\n                }\n            });\n            return options;\n        },\n    };\n    const watch = {\n        modelValue: {\n            handler(currentValue, previousValue) {\n                if (!this.gridCreated || !this.api) {\n                    return;\n                }\n                /*\n                 * Prevents an infinite loop when using v-model for the rowData\n                 */\n                if (currentValue === previousValue) {\n                    return;\n                }\n                if (currentValue && previousValue) {\n                    if (currentValue.length === previousValue.length) {\n                        if (currentValue.every((item, index) => item === previousValue[index])) {\n                            return;\n                        }\n                    }\n                }\n                ComponentUtil.processOnChange({ rowData: currentValue }, this.api);\n            },\n            deep: true\n        },\n        props: {\n            handler(currentValue, previousValue) {\n                if (!this.gridCreated || !this.api) {\n                    return;\n                }\n                const changes = {};\n                Object.entries(currentValue).forEach(([key, value]) => {\n                    if (previousValue[key] === value)\n                        return;\n                    changes[key] = value;\n                });\n                ComponentUtil.processOnChange(changes, this.api);\n            },\n            deep: true,\n        },\n    };\n    ComponentUtil.ALL_PROPERTIES\n        .filter((propertyName) => propertyName != 'gridOptions') // dealt with in AgGridVue itself\n        .forEach((propertyName) => {\n        props[propertyName] = {\n            default: ComponentUtil.VUE_OMITTED_PROPERTY,\n        };\n    });\n    return [props, computed, watch];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}