{"ast":null,"code":"import axios from \"axios\";\nlet url = \"http://phills2.gonetis.com:8000/stockBalance/list/\"; //장고 서버 주소\n\nexport default {\n  data() {\n    return {\n      contents: null,\n      company_name: null,\n      charturl: null\n    };\n  },\n  name: 'HelloWorld',\n  methods: {\n    doInfo(name) {\n      axios({\n        method: \"GET\",\n        url: \"http://phills2.gonetis.com:8000/stockBalance/info/\",\n        params: {\n          company: name\n        }\n      }).then(response => {\n        console.log(\"Success\", response);\n        this.company_name = response.data[0].name;\n        if (name == this.company_name) {\n          this.charturl = \"http://phills2.gonetis.com:8000/stockBalance/\" + this.company_name + \"/\";\n          window.open(this.charturl, \"\", \"_blank\");\n          this.company_name = null;\n          this.charturl = null;\n        }\n      }).catch(error => {\n        alert(\"처리 에러\");\n        console.log(\"Failed to searchStock\", error.response);\n      });\n      if (this.charturl != null) window.open(this.charturl, \"\", \"_blank\");\n    },\n    formatDate(str) {\n      return str.split('T')[0];\n    },\n    fetchData() {\n      axios({\n        method: \"GET\",\n        url: url,\n        params: {\n          acct_no: this.$route.params.acct_no,\n          app_key: this.$route.params.app_key,\n          app_secret: this.$route.params.app_secret,\n          access_token: this.$route.params.access_token\n        }\n      }).then(response => {\n        console.log('stocks:', response.data);\n        this.contents = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.fetchData();\n  }\n};","map":{"version":3,"mappings":"AAqCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,IAAIC,GAAE,GAAI,oDAAoD,EAAE;;AAEhE,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE;IACPC,MAAM,CAACF,IAAI,EAAC;MACVN,KAAK,CAAC;QACFS,MAAM,EAAE,KAAK;QACbR,GAAG,EAAE,oDAAoD;QACzDS,MAAM,EAAC;UACLC,OAAO,EAAEL;QACX;MAEF,CAAC,CAAC,CAACM,IAAI,CAACC,QAAO,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ;QAC/B,IAAI,CAACT,YAAW,GAAIS,QAAQ,CAACX,IAAI,CAAC,CAAC,CAAC,CAACI,IAAG;QAExC,IAAGA,IAAG,IAAK,IAAI,CAACF,YAAY,EAAE;UAC5B,IAAI,CAACC,QAAO,GAAI,+CAA+C,GAAC,IAAI,CAACD,YAAY,GAAC,GAAE;UACpFY,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE,EAAE,EAAE,QAAQ,CAAC;UACxC,IAAI,CAACD,YAAW,GAAI,IAAG;UACvB,IAAI,CAACC,QAAO,GAAI,IAAG;QACrB;MACF,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QAChBC,KAAK,CAAC,OAAO;QACbN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEI,KAAK,CAACN,QAAQ,CAAC;MACtD,CAAC,CAAC;MACJ,IAAG,IAAI,CAACR,QAAO,IAAK,IAAI,EACpBW,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE,EAAE,EAAE,QAAQ,CAAC;IAC9C,CAAC;IACDgB,UAAU,CAACC,GAAG,EAAC;MACb,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IACDC,SAAS,GAAE;MACTxB,KAAK,CAAC;QACNS,MAAM,EAAE,KAAK;QACbR,GAAG,EAAEA,GAAG;QACRS,MAAM,EAAC;UACLe,OAAO,EAAE,IAAI,CAACC,MAAM,CAAChB,MAAM,CAACe,OAAO;UACnCE,OAAO,EAAE,IAAI,CAACD,MAAM,CAAChB,MAAM,CAACiB,OAAO;UACnCC,UAAU,EAAE,IAAI,CAACF,MAAM,CAAChB,MAAM,CAACkB,UAAU;UACzCC,YAAY,EAAE,IAAI,CAACH,MAAM,CAAChB,MAAM,CAACmB;QACnC;MACF,CAAC,EACAjB,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ,CAACX,IAAI;QACpC,IAAI,CAACC,QAAO,GAAIU,QAAQ,CAACX,IAAI;MAC/B,CAAC,EACAgB,KAAK,CAACC,KAAI,IAAK;QACdL,OAAO,CAACC,GAAG,CAACI,KAAK;MACnB,CAAC;IACD;EACF,CAAC;EACDW,OAAO,GAAG;IACR,IAAI,CAACN,SAAS,EAAE;EAClB;AAGF","names":["axios","url","data","contents","company_name","charturl","name","methods","doInfo","method","params","company","then","response","console","log","window","open","catch","error","alert","formatDate","str","split","fetchData","acct_no","$route","app_key","app_secret","access_token","created"],"sourceRoot":"","sources":["/home/terra/Public/Frontend/fund_risk_management/src/components/StockBalance.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container>\n        <v-row align=\"center\">\n          <v-col>\n            <v-subheader>\n              [현재 보유 종목]\n            </v-subheader>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>종목명</v-col>\n          <v-col>매입가</v-col>\n          <v-col>현재가</v-col>\n          <v-col>수익률(%)</v-col>\n          <v-col>보유수량</v-col>\n          <v-col>매입금액</v-col>\n          <v-col>평가금액</v-col>\n          <v-col>증감금액</v-col>\n          <v-col>자산번호</v-col>\n        </v-row>\n        <v-row v-for=\"item in contents\" v-bind:key=\"item.name\">\n          <v-col><a @click=\"doInfo(item.name)\">{{item.name}}</a></v-col>\n          <v-col>{{item.purchase_price}}</v-col>\n          <v-col>{{item.current_price}}</v-col>\n          <v-col>{{item.earnings_rate}}</v-col>\n          <v-col>{{item.purchase_amount}}</v-col>\n          <v-col>{{item.purchase_sum}}</v-col>\n          <v-col>{{item.eval_sum}}</v-col>\n          <v-col>{{item.valuation_sum}}</v-col>\n          <v-col>{{item.asset_num}}</v-col>\n        </v-row>\n    </v-container>      \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nlet url = \"http://phills2.gonetis.com:8000/stockBalance/list/\"; //장고 서버 주소\n\nexport default {\n  data() {\n    return {\n      contents: null,\n      company_name: null,\n      charturl: null,\n    }\n  },\n  name: 'HelloWorld',\n  methods: {\n    doInfo(name){\n      axios({\n          method: \"GET\",\n          url: \"http://phills2.gonetis.com:8000/stockBalance/info/\",\n          params:{\n            company: name,\n          }\n          \n        }).then(response => {\n          console.log(\"Success\", response)\n          this.company_name = response.data[0].name\n          \n          if(name == this.company_name) {\n            this.charturl = \"http://phills2.gonetis.com:8000/stockBalance/\"+this.company_name+\"/\"\n            window.open(this.charturl, \"\", \"_blank\"); \n            this.company_name = null\n            this.charturl = null\n          }\n        }).catch(error => {\n          alert(\"처리 에러\")\n          console.log(\"Failed to searchStock\", error.response);\n        }); \n      if(this.charturl != null) \n          window.open(this.charturl, \"\", \"_blank\"); \n    },\n    formatDate(str){\n      return str.split('T')[0];\n    },\n    fetchData(){\n      axios({\n      method: \"GET\",\n      url: url,\n      params:{\n        acct_no: this.$route.params.acct_no,\n        app_key: this.$route.params.app_key,\n        app_secret: this.$route.params.app_secret,\n        access_token: this.$route.params.access_token\n      }\n    })\n    .then(response => {\n      console.log('stocks:', response.data)\n      this.contents = response.data;\n    })\n    .catch(error => {\n      console.log(error)\n    })\n    }\n  },\n  created() { \n    this.fetchData();\n  }\n\n  \n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}