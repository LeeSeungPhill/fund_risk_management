{"ast":null,"code":"import axios from \"axios\";\nlet url = \"http://phills2.gonetis.com:8000/stockMarketMng/list/\"; //장고 서버 주소\n\nexport default {\n  data: () => {\n    return {\n      marketLevelMng: [],\n      acct_no: null,\n      app_key: null,\n      app_secret: null,\n      access_token: null\n    };\n  },\n  methods: {\n    formatDate(str) {\n      return str.split('T')[0];\n    },\n    getLevel() {\n      axios({\n        method: \"GET\",\n        url: url,\n        params: {\n          acct_no: this.$route.params.acct_no,\n          app_key: this.$route.params.app_key,\n          app_secret: this.$route.params.app_secret,\n          access_token: this.$route.params.access_token\n        }\n      }).then(response => {\n        this.marketLevelMng = response.data;\n        console.log(\"Success\", response);\n      }).catch(error => {\n        alert(\"처리 에러\");\n        console.log(\"Failed to get StockMarketLevelMng\", error.response);\n      });\n    }\n  },\n  created() {\n    this.getLevel();\n  }\n};","map":{"version":3,"mappings":"AAoCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,IAAIC,GAAE,GAAI,sDAAsD,EAAE;;AAEhE,eAAe;EACbC,IAAI,EAAE,MAAM;IACV,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,CAACC,GAAG,EAAC;MACb,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IACDC,QAAQ,GAAE;MACRZ,KAAK,CAAC;QACJa,MAAM,EAAE,KAAK;QACbZ,GAAG,EAAEA,GAAG;QACRa,MAAM,EAAE;UACNV,OAAO,EAAE,IAAI,CAACW,MAAM,CAACD,MAAM,CAACV,OAAO;UACnCC,OAAO,EAAE,IAAI,CAACU,MAAM,CAACD,MAAM,CAACT,OAAO;UACnCC,UAAU,EAAE,IAAI,CAACS,MAAM,CAACD,MAAM,CAACR,UAAU;UACzCC,YAAY,EAAE,IAAI,CAACQ,MAAM,CAACD,MAAM,CAACP;QACnC;MACF,CAAC,CAAC,CAACS,IAAI,CAACC,QAAO,IAAK;QAClB,IAAI,CAACd,cAAa,GAAIc,QAAQ,CAACf,IAAI;QACnCgB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,QAAQ;MACjC,CAAC,CAAC,CAACG,KAAK,CAACC,KAAI,IAAK;QAChBC,KAAK,CAAC,OAAO;QACbJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEE,KAAK,CAACJ,QAAQ,CAAC;MAClE,CAAC,CAAC;IACJ;EACF,CAAC;EACDM,OAAO,GAAE;IACP,IAAI,CAACX,QAAQ,EAAE;EACjB;AACF,CAAC","names":["axios","url","data","marketLevelMng","acct_no","app_key","app_secret","access_token","methods","formatDate","str","split","getLevel","method","params","$route","then","response","console","log","catch","error","alert","created"],"sourceRoot":"","sources":["/home/terra/Public/Frontend/fund_risk_management/src/views/MarketLevelMng.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <v-container>\r\n        <v-row align=\"center\">\r\n          <v-col>\r\n            <v-subheader>\r\n              [시장 레벨 관리]\r\n            </v-subheader>\r\n          </v-col>\r\n        </v-row>\r\n        <v-row>\r\n          <v-col>리스크번호</v-col>\r\n          <v-col>시장레벨</v-col>\r\n          <v-col>총자산</v-col>\r\n          <v-col>리스크(%)</v-col>\r\n          <v-col>리스크 금액</v-col>\r\n          <v-col>종목수</v-col>\r\n          <v-col>종목당 리스크</v-col>\r\n          <v-col>적용시작일</v-col>\r\n          <v-col>적용종료일</v-col>\r\n        </v-row>\r\n        <v-row v-for=\"item in marketLevelMng\" v-bind:key=\"item.asset_risk_num\">\r\n          <v-col>{{item.asset_risk_num}}</v-col>\r\n          <v-col>{{item.market_level_num}}</v-col>\r\n          <v-col>{{item.total_asset}}</v-col>\r\n          <v-col>{{item.risk_rate}}</v-col>\r\n          <v-col>{{item.risk_sum}}</v-col>\r\n          <v-col>{{item.item_number}}</v-col>\r\n          <v-col>{{item.item_risk_sum}}</v-col>\r\n          <v-col>{{formatDate(item.aply_start_dt)}}</v-col>\r\n          <v-col>{{formatDate(item.aply_end_dt)}}</v-col>\r\n        </v-row>\r\n      </v-container>    \r\n    </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nlet url = \"http://phills2.gonetis.com:8000/stockMarketMng/list/\"; //장고 서버 주소\r\n\r\n  export default {\r\n    data: () => {\r\n      return {\r\n        marketLevelMng: [],\r\n        acct_no: null,\r\n        app_key: null,\r\n        app_secret: null,\r\n        access_token: null,\r\n      };\r\n    },\r\n    methods: {\r\n      formatDate(str){\r\n        return str.split('T')[0];\r\n      },\r\n      getLevel(){\r\n        axios({\r\n          method: \"GET\",\r\n          url: url,\r\n          params: {\r\n            acct_no: this.$route.params.acct_no,\r\n            app_key: this.$route.params.app_key,\r\n            app_secret: this.$route.params.app_secret,\r\n            access_token: this.$route.params.access_token\r\n          }\r\n        }).then(response => {\r\n          this.marketLevelMng = response.data;\r\n          console.log(\"Success\", response)\r\n        }).catch(error => {\r\n          alert(\"처리 에러\")\r\n          console.log(\"Failed to get StockMarketLevelMng\", error.response);\r\n        });\r\n      }\r\n    },\r\n    created(){\r\n      this.getLevel();\r\n    }\r\n  };\r\n  \r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}